let express,bodyParser,config,userRouter,articleRouter,invoiceRouter,invoiceItemsRouter;_929‍.x([["default",()=>_929‍.o]]);_929‍.w("express",[["default",["express"],function(v){express=v}]]);_929‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_929‍.w("../../config",[["default",["config"],function(v){config=v}]]);_929‍.w("../Routes/UserRouter",[["default",["userRouter"],function(v){userRouter=v}]]);_929‍.w("../Routes/ArticleRouter",[["default",["articleRouter"],function(v){articleRouter=v}]]);_929‍.w("../Routes/InvoiceRouter",[["default",["invoiceRouter"],function(v){invoiceRouter=v}]]);_929‍.w("../Routes/InvoiceItemsRouter",[["default",["invoiceItemsRouter"],function(v){invoiceItemsRouter=v}]]);







class HttpServer {

    constructor (option = {}) {
        this.port = option.serverPort || config.serverPort;
        this.environment = option.environment || config.environment;
        this.app = express();
    }

    start(){
        this.register();
        this.app.listen(this.port, () =>{
            console.log(`Server started on port ${this.port} in ${this.environment} mode`)
        });
    }
    register(){
        this.app.use(bodyParser());
        this.app.get('/', (req, res) => {
            res.send('Http server is up ...');
        });
        this.app.use('/user', userRouter);
        this.app.use('/article', articleRouter);
        this.app.use('/invoice', invoiceRouter);
        this.app.use('/invoiceItems', invoiceItemsRouter);
    }
}

_929‍.d(new HttpServer());
